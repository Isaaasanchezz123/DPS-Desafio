{"version":3,"sources":["reducers.js"],"names":["initialState","espacios","total","parkingReducer","state","arguments","length","undefined","action","type","updatedSpaces","map","space","id","payload","_objectSpread","ocupado","costo","updatedTotal"],"mappings":"szBAAA,IAAMA,aAAe,CACnBC,SAAU,GACVC,MAAO,GAIHC,eAAiB,SAAA,EAAA,GAAkC,IAAjCC,EAAiC,EAAAC,UAAAC,aAAAC,IAAlC,EAAA,EAASP,aAAcQ,EAAW,EAAAH,UAAAC,OAAlC,OAAkCC,EACvD,OAAQC,EAAOC,MACb,IAAK,mBACH,IAAMC,EAAgBN,EAAMH,SAASU,IAAI,SAAAC,GAAK,OAC5CA,EAAMC,KAAOL,EAAOM,QAAQD,GAA5BE,cAAA,GAAsCH,EAAtC,CAA6CI,SAAS,IAASJ,IAVjEZ,OAAAA,cAAAA,GACII,EADJJ,CAECC,SAAES,EAETR,MAQ2BE,EAAMF,MAAQM,EAAOM,QAAQG,QANlDd,IAAAA,kBAAwCK,OAAAA,cAAAA,GAgBnCJ,EAhBmCI,CAC5CP,SADuDO,EAAAM,UAGnD,QAA8C,OAAAV,aAGxCc","file":"reducers.min.js","sourcesContent":["const initialState = {\n  espacios: [],\n  total: 0,\n};\n//En esta parte van las funciones\n// y tambien se cargan los espacions ya utilizados\nconst parkingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RESERVAR_ESPACIO': {\n      const updatedSpaces = state.espacios.map(space =>\n        space.id === action.payload.id ? { ...space, ocupado: true } : space\n      );\n      const updatedTotal = state.total + action.payload.costo;\n      return {\n        ...state,\n        espacios: updatedSpaces,\n        total: updatedTotal,\n      };\n    }\n    case 'CARGAR_ESPACIOS': {\n      const loadedSpaces = action.payload;\n      return {\n        ...state,\n        espacios: loadedSpaces,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default parkingReducer;"]}